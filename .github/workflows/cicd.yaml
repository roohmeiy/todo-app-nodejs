name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'helm/**'
      - 'k8s/**'
      - 'README.md'
  push:
    branches:
      - main
    paths-ignore:
      - 'helm/**'
      - 'k8s/**'
      - 'README.md'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm install

      - name: Fix file permissions
        run: |
          chmod -R 755 node_modules/.bin
          chmod +x ./node_modules/.bin/jest

      - name: Run Code Quality Checks
        continue-on-error: true
        run: |
          echo "Running code quality checks (warnings only)..."
          npx eslint . --ext .js --no-error-on-unmatched-pattern || true
          echo "Code style check complete - see above for any suggestions"

      - name: Run Security Audit
        continue-on-error: true
        run: |
          echo "Checking for security vulnerabilities..."
          npm audit || true
          echo "Security check complete - see above for any recommendations"

      - name: Run Tests
        run: npm test

  push:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: roohmeiy
          password: ${{ secrets.DOCKER_PERSONAL_ACCESS_TOKEN }}

      - name: Build and Push action
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: roohmeiy/todo-app-nodejs:${{ github.run_id }}

  update-newtag-in-helm-chart:
    runs-on: ubuntu-latest
    needs: push
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.TOKEN }}
          ref: main

      - name: Update tag in Helm chart
        run: |
          sed -i 's/tag: .*/tag: "${{github.run_id}}"/' helm/todo-app-chart/values.yaml

      - name: Commit and push changes
        run: |
          git config --global user.email "roohmeiy@gmail.com"
          git config --global user.name "Payal Sharma"
          git add helm/todo-app-chart/values.yaml
          git commit -m "Update tag in Helm chart"
          git push

  deploy-to-kind:
    runs-on: self-hosted
    needs: update-newtag-in-helm-chart
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy to Kind Cluster
        run: |
          kubectl cluster-info --context kind-my-cluster
          docker pull roohmeiy/todo-app-nodejs:${{ github.run_id }}
          kind load docker-image roohmeiy/todo-app-nodejs:${{ github.run_id }} --name my-cluster
          cd helm/todo-app-chart || exit 1
          echo "üöÄ Deploying with Helm..."
          kubectl delete replicasets --all -n todo-app-ns || echo "No replicasets to delete"
          helm upgrade --install todo-app-nodejs . \
          --namespace todo-app-ns --create-namespace \
          --set image.repository=roohmeiy/todo-app-nodejs \
          --set image.tag=${{ github.run_id }} \
          --set image.pullPolicy=IfNotPresent \
          --debug
          
          echo "‚è≥ Waiting for deployment to be ready..."
            kubectl rollout status deployment/todo-app-nodejs-deployment -n todo-app-ns --timeout=180s
            echo "Checking pods..."
            kubectl get pods -n todo-app-ns
            sleep 30
            echo "Cleaning up any existing processes on port 3000..."
            lsof -t -i :3000 | xargs kill -9 || echo "No process found on port 3000"  
            echo "Starting port-forward process in background..."
            sleep 10
            nohup kubectl port-forward svc/todo-app-nodejs-service 3000:3000 --address=0.0.0.0 -n todo-app-ns > /tmp/port-forward.log 2>&1 &
            
            # Wait and verify port-forward is working
            for i in {1..10}; do
              if netstat -tuln | grep -q ":3000 "; then
                echo "‚úÖ Port-forward successfully established"
                break
              fi
              echo "Waiting for port-forward... attempt $i/10"
              sleep 5
            done


  success-notification:
    needs: deploy-to-kind
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: Send Success Email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "‚úÖ Deployment Successful"
          body: |
            The deployment of the Node.js application to Kind cluster was successful!
            
            Details:
            - Deployment ID: ${{ github.run_id }}
            - Repository: ${{ github.repository }}
            - Branch: ${{ github.ref }}
            - Triggered by: ${{ github.actor }}
            - Image Tag: roohmeiy/todo-app-nodejs:${{ github.run_id }}
            
            View the deployment: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          to: ${{ secrets.NOTIFY_EMAIL }}
          from: ${{ secrets.EMAIL_USERNAME }}

  failure-notification:
    if: failure()
    runs-on: ubuntu-latest
    needs: [test, push, update-newtag-in-helm-chart, deploy-to-kind]
    steps:
      - name: Send Failure Email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "‚ùå Deployment Failed"
          body: |
            The deployment of the Node.js application has failed.
            
            Details:
            - Failed Job ID: ${{ github.run_id }}
            - Repository: ${{ github.repository }}
            - Branch: ${{ github.ref }}
            - Triggered by: ${{ github.actor }}
            
            Please check the workflow logs for more details:
            ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          to: ${{ secrets.NOTIFY_EMAIL }}
          from: ${{ secrets.EMAIL_USERNAME }}
