name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'helm/**'
      - 'k8s/**'
      - 'README.md'
  push:
    branches:
      - main
    paths-ignore:
      - 'helm/**'
      - 'k8s/**'
      - 'README.md'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm install

      - name: Fix file permissions
        run: |
          chmod -R 755 node_modules/.bin
          chmod +x ./node_modules/.bin/jest

      - name: Run Code Quality Checks
        continue-on-error: true
        run: |
          echo "Running code quality checks (warnings only)..."
          npx eslint . --ext .js --no-error-on-unmatched-pattern || true
          echo "Code style check complete - see above for any suggestions"

      - name: Run Security Audit
        continue-on-error: true
        run: |
          echo "Checking for security vulnerabilities..."
          npm audit || true
          echo "Security check complete - see above for any recommendations"

      - name: Run Tests
        run: npm test

  push:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: roohmeiy
          password: ${{ secrets.DOCKER_PERSONAL_ACCESS_TOKEN }}

      - name: Build and Push action
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: roohmeiy/todo-app-nodejs:${{ github.run_id }}

  update-newtag-in-helm-chart:
    runs-on: ubuntu-latest
    needs: push
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.TOKEN }}
          ref: main

      - name: Update tag in Helm chart
        run: |
          # sed -i 's/tag: .*/tag: "${{github.run_id}}"/' helm/todo-app-chart/values.yaml
          sed -i "s/tag:.*/tag: ${GITHUB_RUN_ID}/" helm/todo-app-chart/values.yaml
      - name: Commit and push changes
        run: |
          git config --global user.email "roohmeiy@gmail.com"
          git config --global user.name "Payal Sharma"
          git add helm/todo-app-chart/values.yaml
          git commit -m "Update tag in Helm chart"
          git push 

  deploy-to-kind:
    runs-on: ubuntu-latest
    needs: update-newtag-in-helm-chart
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy to Kind Cluster
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.LOCAL_HOST }}
          username: ${{ secrets.LOCAL_USER }}
          key: ${{ secrets.LOCAL_SSH_KEY }}
          script: |
            echo "Checking cluster connection..."
            kubectl cluster-info --context kind-my-cluster
            
            echo "Checking current directory..."
            pwd
            
            echo "Listing directory contents..."
            ls -la
            
            echo "Checking helm-charts directory..."
            cd /home/ubuntu/todo-app-nodejs/helm || exit 1
            ls -la
            
            echo "Checking helm/todo-app-chart path..."
            ls -la helm/todo-app-chart || echo "Chart directory not found"
            
            echo "Running helm with debug..."
            helm upgrade --install todo-app-nodejs helm/todo-app-chart --namespace todo-app-ns --create-namespace --debug
            
            echo "Checking namespace..."
            kubectl get ns | grep todo-app-ns
            
            echo "Checking deployments..."
            kubectl get deployments -n todo-app-ns
            
            echo "Checking pods..."
            kubectl get pods -n todo-app-ns

            kubectl port-forward svc/todo-app-nodejs-service 3000:3000 --address=0.0.0.0 -n todo-app-ns &

  success-notification:
    needs: deploy-to-kind
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: Send Success Email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "✅ Deployment Successful"
          body: |
            The deployment of the Node.js application to Kind cluster was successful!
            
            Details:
            - Deployment ID: ${{ github.run_id }}
            - Repository: ${{ github.repository }}
            - Branch: ${{ github.ref }}
            - Triggered by: ${{ github.actor }}
            - Image Tag: roohmeiy/todo-app-nodejs:${{ github.run_id }}
            
            View the deployment: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          to: ${{ secrets.NOTIFY_EMAIL }}
          from: ${{ secrets.EMAIL_USERNAME }}

  failure-notification:
    if: failure()
    runs-on: ubuntu-latest
    needs: [test, push, update-newtag-in-helm-chart, deploy-to-kind]
    steps:
      - name: Send Failure Email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "❌ Deployment Failed"
          body: |
            The deployment of the Node.js application has failed.
            
            Details:
            - Failed Job ID: ${{ github.run_id }}
            - Repository: ${{ github.repository }}
            - Branch: ${{ github.ref }}
            - Triggered by: ${{ github.actor }}
            
            Please check the workflow logs for more details:
            ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          to: ${{ secrets.NOTIFY_EMAIL }}
          from: ${{ secrets.EMAIL_USERNAME }}

# name: CI/CD Pipeline

# on:
#   pull_request:
#     branches:
#       - main
#     paths-ignore:
#       - 'helm/**'
#       - 'k8s/**'
#       - 'README.md'
#   push:
#     branches:
#       - main
#     paths-ignore:
#       - 'helm/**'
#       - 'k8s/**'
#       - 'README.md'

# jobs:
#   test:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v3

#       - name: Setup Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: '18'

#       - name: Install Dependencies
#         run: npm install

#       - name: Fix file permissions
#         run: |
#           chmod -R 755 node_modules/.bin
#           chmod +x ./node_modules/.bin/jest

#       - name: Run Code Quality Checks
#         continue-on-error: true
#         run: |
#           echo "Running code quality checks (warnings only)..."
#           npx eslint . --ext .js --no-error-on-unmatched-pattern || true
#           echo "Code style check complete - see above for any suggestions"

#       - name: Run Security Audit
#         continue-on-error: true
#         run: |
#           echo "Checking for security vulnerabilities..."
#           npm audit || true
#           echo "Security check complete - see above for any recommendations"

#       - name: Run Tests
#         run: npm test

#   push:
#     runs-on: ubuntu-latest
#     needs: test
#     if: github.event_name == 'push' && github.ref == 'refs/heads/main'
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v1

#       - name: Login to DockerHub
#         uses: docker/login-action@v3
#         with:
#           username: roohmeiy
#           password: ${{ secrets.DOCKER_PERSONAL_ACCESS_TOKEN }}

#       - name: Build and Push action
#         uses: docker/build-push-action@v6
#         with:
#           context: .
#           file: ./Dockerfile
#           push: true
#           tags: roohmeiy/todo-app-nodejs:${{ github.run_id }}

#   update-newtag-in-helm-chart:
#     runs-on: ubuntu-latest
#     needs: push
#     if: github.event_name == 'push' && github.ref == 'refs/heads/main'
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4
#         with:
#           token: ${{ secrets.TOKEN }}
#           ref: main

#       - name: Update tag in Helm chart
#         run: |
#           sed -i 's/tag: .*/tag: "${{github.run_id}}"/' helm/todo-app-chart/values.yaml

#       - name: Commit and push changes
#         run: |
#           git config --global user.email "roohmeiy@gmail.com"
#           git config --global user.name "Payal Sharma"
#           git checkout main
#           git add helm/todo-app-chart/values.yaml
#           git commit -m "Update tag in Helm chart"
#           git push origin main

#   deploy-to-kind:
#     runs-on: ubuntu-latest
#     needs: update-newtag-in-helm-chart
#     if: github.event_name == 'push' && github.ref == 'refs/heads/main'
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Deploy to Kind Cluster
#         uses: appleboy/ssh-action@v0.1.8
#         with:
#           host: ${{ secrets.LOCAL_HOST }}
#           username: ${{ secrets.LOCAL_USER }}
#           key: ${{ secrets.LOCAL_SSH_KEY }}
#           script: |
#             kubectl cluster-info --context kind-my-cluster
#             cd ~/helm-charts
#             helm repo update
#             helm upgrade --install todo-app-nodejs helm/todo-app-chart --namespace todo-app-ns --create-namespace
#             kubectl get pods -n todo-app-ns
#             kubectl port-forward svc/todo-app-nodejs-service 3000:3000 --address=0.0.0.0 -n todo-app-ns &

#   success-notification:
#     needs: deploy-to-kind
#     runs-on: ubuntu-latest
#     if: success()
#     steps:
#       - name: Send Success Email
#         uses: dawidd6/action-send-mail@v3
#         with:
#           server_address: smtp.gmail.com
#           server_port: 587
#           username: ${{ secrets.EMAIL_USERNAME }}
#           password: ${{ secrets.EMAIL_PASSWORD }}
#           subject: "✅ Deployment Successful"
#           body: |
#             The deployment of the Node.js application to Kind cluster was successful!
            
#             Details:
#             - Deployment ID: ${{ github.run_id }}
#             - Repository: ${{ github.repository }}
#             - Branch: ${{ github.ref }}
#             - Triggered by: ${{ github.actor }}
#             - Image Tag: roohmeiy/todo-app-nodejs:${{ github.run_id }}
            
#             View the deployment: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
#           to: ${{ secrets.NOTIFY_EMAIL }}
#           from: ${{ secrets.EMAIL_USERNAME }}

#   failure-notification:
#     if: failure()
#     runs-on: ubuntu-latest
#     needs: [test, push, update-newtag-in-helm-chart, deploy-to-kind]
#     steps:
#       - name: Send Failure Email
#         uses: dawidd6/action-send-mail@v3
#         with:
#           server_address: smtp.gmail.com
#           server_port: 587
#           username: ${{ secrets.EMAIL_USERNAME }}
#           password: ${{ secrets.EMAIL_PASSWORD }}
#           subject: "❌ Deployment Failed"
#           body: |
#             The deployment of the Node.js application has failed.
            
#             Details:
#             - Failed Job ID: ${{ github.run_id }}
#             - Repository: ${{ github.repository }}
#             - Branch: ${{ github.ref }}
#             - Triggered by: ${{ github.actor }}
            
#             Please check the workflow logs for more details:
#             ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
#           to: ${{ secrets.NOTIFY_EMAIL }}
#           from: ${{ secrets.EMAIL_USERNAME }}