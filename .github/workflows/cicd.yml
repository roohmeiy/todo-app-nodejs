name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  code-quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm install

      - name: Run ESLint
        run: |
          npm install eslint --save-dev
          npx eslint . --max-warnings=0

      - name: Check Code Formatting
        run: |
          npm install prettier --save-dev
          npx prettier --check "**/*.{js,jsx,json,md}"

      - name: Run Security Audit
        run: npm audit

  test:
    runs-on: ubuntu-latest
    needs: code-quality
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm install

      - name: Run Unit Tests
        run: npm test
        
      - name: Generate Test Coverage
        run: npm run test -- --coverage
        
      - name: Check Test Coverage
        run: |
          COVERAGE=$(cat coverage/coverage-summary.json | jq -r '.total.lines.pct')
          if (( $(echo "$COVERAGE < 70" | bc -l) )); then
            echo "Test coverage is below 70%"
            exit 1
          fi

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: roohmeiy
          password: ${{ secrets.DOCKER_PERSONAL_ACCESS_TOKEN }}

      - name: Build and Test Docker Image
        run: |
          docker build -t roohmeiy/todo-app-nodejs:${{ github.sha }} .
          docker run roohmeiy/todo-app-nodejs:${{ github.sha }} npm test
          docker push roohmeiy/todo-app-nodejs:${{ github.sha }}

      - name: Set up Kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Validate Kubernetes Manifests
        run: |
          kubectl apply --dry-run=client -f k8s/deployment.yaml
          kubectl apply --dry-run=client -f k8s/service.yaml

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml

      - name: Verify Deployment
        run: |
          kubectl rollout status deployment/todo-app-nodejs-deployment -n todo-app-ns
          kubectl get pods -n todo-app-ns -l app=todo-app-nodejs

      - name: Notify on Success
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: payalsharma19082004@gmail.com
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "Deployment Successful"
          body: |
            The Node.js application has been successfully deployed to Kubernetes.
            
            Build Details:
            - Commit: ${{ github.sha }}
            - Branch: ${{ github.ref }}
            - Trigger: ${{ github.event_name }}
            
            Quality Metrics:
            - All tests passed
            - Code coverage requirements met
            - Security audit passed
            - Linting passed
          to: ${{ secrets.NOTIFY_EMAIL }}

  failure-notification:
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - name: Notify on Failure
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "Deployment Failed"
          body: |
            The deployment of the Node.js application to Kubernetes has failed.
            
            Failure Details:
            - Commit: ${{ github.sha }}
            - Branch: ${{ github.ref }}
            - Trigger: ${{ github.event_name }}
            - Failed Job: ${{ github.job }}
            
            Please check the GitHub Actions logs for more details.
          to: ${{ secrets.NOTIFY_EMAIL }}